using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;

class Program
{
    static int player1Score = 0;
    static int player2Score = 0;

    static int player1X = 1;
    static int player2X = Console.WindowWidth - 2;

    static int player1Y = Console.WindowHeight / 2;
    static int player2Y = Console.WindowHeight / 2;

    static List<Bullet> bullets = new List<Bullet>();

    class Bullet
    {
        public int X;
        public int Y;
        public int Direction;

        public Bullet(int x, int y, int direction)
        {
            X = x;
            Y = y;
            Direction = direction;
        }
    }

    static void Main()
    {
        Console.CursorVisible = false;
        Console.Clear();

        while (player1Score < 10 && player2Score < 10)
        {
            DrawGame();
            HandleInput();
            MoveBullets();
            Thread.Sleep(10);
        }

        Console.Clear();
        if (player1Score == 10)
        {
            Console.WriteLine("Player 1 wins!");
        }
        else
        {
            Console.WriteLine("Player 2 wins!");
        }
        Console.ReadKey();
    }

    static void DrawGame()
    {
        Console.Clear();

        Console.SetCursorPosition(player1X, player1Y);
        Console.Write(">");
        Console.SetCursorPosition(player2X, player2Y);
        Console.Write("<");

        foreach (var bullet in bullets)
        {
            Console.SetCursorPosition(bullet.X, bullet.Y);
            Console.Write("*");
        }

        Console.SetCursorPosition(0, Console.WindowHeight - 1);
        Console.Write($"Player 1 Score: {player1Score}, Player 2 Score: {player2Score}");
    }

    static void HandleInput()
    {
        if (Console.KeyAvailable)
        {
            var key = Console.ReadKey(true).Key;

            if (key == ConsoleKey.W && player1Y > 0)
            {
                player1Y--;
            }
            else if (key == ConsoleKey.S && player1Y < Console.WindowHeight - 1)
            {
                player1Y++;
            }
            else if (key == ConsoleKey.UpArrow && player2Y > 0)
            {
                player2Y--;
            }
            else if (key == ConsoleKey.DownArrow && player2Y < Console.WindowHeight - 1)
            {
                player2Y++;
            }
            else if (key == ConsoleKey.Tab)
            {
                bullets.Add(new Bullet(player1X + 1, player1Y, 1));
            }
            else if (key == ConsoleKey.Spacebar)
            {
                bullets.Add(new Bullet(player2X - 1, player2Y, -1));
            }
        }
    }

    static void MoveBullets()
    {
        for (int i = bullets.Count - 1; i >= 0; i--)
        {
            var bullet = bullets[i];
            bullet.X += bullet.Direction;

            if (bullet.X < 0 || bullet.X >= Console.WindowWidth)
            {
                bullets.RemoveAt(i);
            }
            else if (bullet.X == player1X && bullet.Y == player1Y)
            {
                player1Score++;
                bullets.RemoveAt(i);
            }
            else if (bullet.X == player2X && bullet.Y == player2Y)
            {
                player2Score++;
                bullets.RemoveAt(i);
            }
        }
    }
}
